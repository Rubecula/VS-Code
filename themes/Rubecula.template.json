{
    "type": "type",
    "colors": {
        //
        // Activity Bar
        //
        "activityBar.background": "lightBackground",
        "activityBar.dropBorder": "highlightBackground",
        "activityBar.foreground": "foreground",
        "activityBar.inactiveForeground": "inactiveForeground",
        // "activityBar.border": "UNUSED",
        "activityBarBadge.background": "foreground",
        "activityBarBadge.foreground": "background",
        // "activityBar.activeBorder": "UNUSED",
        // "activityBar.activeBackground": "UNUSED",
        // "activityBar.activeFocusBorder": "UNUSED",

        //
        // Badge
        //
        // Badge foreground color.
        "badge.foreground": "foreground",
        // Badge background color.
        "badge.background": "highlightBackground",

        //
        // Breadcrumb
        //
        // Breadcumb when clicked on foreground.
        "breadcrumb.activeSelectionForeground": "brightForeground",
        "breadcrumb.background": "background",
        // Breadcrumb hover.
        "breadcrumb.focusForeground": "foreground",
        "breadcrumb.foreground": "inactiveForeground",
        "breadcrumbPicker.background": "background",

        //
        // Button Control
        //
        // Button background color.
        "button.background": "background",
        // Button foreground color.
        "button.foreground": "foreground",
        // Button background color when hovering.
        "button.hoverBackground": "highlightBackground",

        //
        // Debug Exception Widget
        //
        // Exception widget background color.
        "debugExceptionWidget.background": "background",
        // Exception widget border color.
        "debugExceptionWidget.border": "pink",

        //
        // Settings
        //
        "settings.checkboxBackground": "background",
        "settings.checkboxBorder": "border",
        "settings.checkboxForeground": "foreground",
        "settings.dropdownBackground": "background",
        "settings.dropdownBorder": "border",
        "settings.dropdownForeground": "foreground",
        "settings.dropdownListBorder": "border",
        "settings.headerForeground": "brightForeground",
        "settings.modifiedItemIndicator": "yellow",
        "settings.numberInputBackground": "background",
        "settings.numberInputBorder": "border",
        "settings.numberInputForeground": "foreground",
        "settings.textInputBackground": "background",
        "settings.textInputBorder": "border",
        "settings.textInputForeground": "foreground",

        //
        // Contrast Colors
        //
        // An extra border around active elements to separate them from others for greater contrast.
        // "contrastActiveBorder": "NOTSUPPORTED",
        // An extra border around elements to separate them from others for greater contrast.
        // "contrastBorder": "NOTSUPPORTED",

        //
        // Base Colors
        //
        // Overall border color for focused elements. This color is only used if not overridden by a component.
        "focusBorder": "border",
        // Overall foreground color. This color is only used if not overridden by a component.
        "foreground": "foreground",
        // Shadow color of widgets such as Find/Replace inside the editor.
        // "widget.shadow": "INHERIT",
        // Background color of text selections in the workbench (for input fields or text areas, does not apply to selections within the editor and the terminal).
        "selection.background": "selectionBackground",
        // Foreground color for description text providing additional information, for example for a label.
        "descriptionForeground": "inactiveForeground",
        // Overall foreground color for error messages (this color is only used if not overridden by a component).
        "errorForeground": "pink",

        //
        // Text Colors
        //
        // Background color for block quotes in text.
        "textBlockQuote.background": "background",
        // Border color for block quotes in text.
        "textBlockQuote.border": "border",
        // Background color for code blocks in text.
        "textCodeBlock.background": "highlightBackground",
        // Foreground color for active links in text.
        "textLink.activeForeground": "yellow",
        // Foreground color for links in text.
        "textLink.foreground": "cyan",
        // Foreground color for preformatted text segments.
        "textPreformat.foreground": "foreground",
        // Color for text separators.
        "textSeparator.foreground": "foreground",

        //
        // Dropdown Control
        //
        // Dropdown background.
        "dropdown.background": "background",
        // Dropdown list background.
        "dropdown.listBackground": "background",
        // Dropdown border.
        "dropdown.border": "border",
        // Dropdown foreground.
        "dropdown.foreground": "foreground",

        //
        // Input Control
        //
        // Input box background.
        "input.background": "background",
        // Input box border.
        "input.border": "border",
        // Input box foreground.
        "input.foreground": "foreground",
        // Input box foreground color for placeholder text.
        "input.placeholderForeground": "inactiveForeground",
        // Border color of activated options in input fields.
        // "inputOption.activeBorder": "NONE",
        // Input validation background color for error severity.
        "inputValidation.errorBackground": "background",
        // Input validation border color for error severity.
        "inputValidation.errorBorder": "pink",
        // Input validation background color for information severity.
        "inputValidation.infoBackground": "background",
        // Input validation border color for information severity.
        "inputValidation.infoBorder": "inactiveForeground",
        // Input validation background color for information warning.
        "inputValidation.warningBackground": "background",
        // Input validation border color for warning severity.
        "inputValidation.warningBorder": "orange",

        //
        // Scroll Bar Control
        //
        // Scroll Bar shadow to indicate that the view is scrolled.
        // "scrollbar.shadow": "INHERIT",
        // Slider background color when active.
        "scrollbarSlider.activeBackground": "foreground38",
        // Slider background color.
        "scrollbarSlider.background": "foreground15",
        // Slider background color when hovering.
        "scrollbarSlider.hoverBackground": "foreground1c",

        //
        // Progress Bar
        //
        // Background color of the progress bar shown for long running operations.
        "progressBar.background": "highlightBackground",

        //
        // Lists and Trees
        //
        // List/Tree background color for the selected item when the list/tree is active.
        "list.activeSelectionBackground": "selectionBackground",
        // List/Tree foreground color for the selected item when the list/tree is active.
        "list.activeSelectionForeground": "brightForeground",
        // List/Tree drag and drop background when moving items around using the mouse.
        "list.dropBackground": "highlightBackground",
        // List/Tree background color for the focused item when the list/tree is active.
        "list.focusBackground": "selectionBackground",
        // List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.
        "list.focusForeground": "brightForeground",
        // List/Tree foreground color of the match highlights when searching inside the list/tree.
        "list.highlightForeground": "cyan",
        // List/Tree background when hovering over items using the mouse.
        "list.hoverBackground": "highlightBackground",
        // List/Tree foreground when hovering over items using the mouse.
        // "list.hoverForeground": "INHERIT",
        // List/Tree background color for the selected item when the list/tree is inactive.
        "list.inactiveSelectionBackground": "inactiveSelectionBackground",
        // List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.
        // "list.inactiveSelectionForeground": "INHERIT",
        // List background color for the focused item when the list is inactive. An active list has keyboard focus, an inactive does not. Currently only supported in lists.
        "list.inactiveFocusBackground": "inactiveSelectionBackground",
        // List/Tree foreground color for invalid items, for example an unresolved root in explorer.
        "list.invalidItemForeground": "pink",
        "list.errorForeground": "pink",
        "list.warningForeground": "orange",

        //
        // Side Bar
        //
        // Side Bar background color.
        "sideBar.background": "darkBackground",
        // Side Bar foreground color. The Side Bar is the container for views like Explorer and Search.
        // "sideBar.foreground": "INHERIT",
        // Side Bar border color on the side separating the editor.
        // "sideBar.border": "NONE",
        // Drag and drop feedback color for the side bar sections. The color should have transparency so that the side bar sections can still shine through. The side bar is the container for views like explorer and search.
        "sideBar.dropBackground": "highlightBackground",
        // Side Bar title foreground color.
        // "sideBarTitle.foreground": "INHERIT",
        // Side Bar section header background color.
        "sideBarSectionHeader.background": "lightBackground",
        // Side Bar section header foreground color.
        // "sideBarSectionHeader.foreground": "INHERIT",

        //
        // Editor Groups & Tabs
        //
        // Background color of an editor group. The background color shows up when dragging editor groups around.
        "editorGroup.background": "background",
        // Color to separate multiple editor groups from each other.
        // "editorGroup.border": "INHERIT",
        // Background color when dragging editors around.
        "editorGroup.dropBackground": "highlightBackground",

        // Background color of the edit>or group title header when Tabs are disabled (set "workbench.editor.showTabs": false).
        // "editorGroupHeader.noTabsBackground": "NONE",
        // Background color of the Tabs container.
        "editorGroupHeader.tabsBackground": "lightBackground",
        // Border color of the editor group title header when tabs are enabled.
        // "editorGroupHeader.tabsBorder": "NONE",

        // Active Tab background color.
        "tab.activeBackground": "background",
        // Active Tab foreground color in an active group.
        // "tab.activeForeground": "INHERIT",
        // Border to separate Tabs from each other.
        "tab.border": "lightBackground",
        // Bottom border for the active tab.
        "tab.activeBorder": "background",
        // Bottom border for the active tab in an inactive editor group.
        // "tab.unfocusedActiveBorder": "NONE",
        // Inactive Tab background color.
        "tab.inactiveBackground": "lightBackground",
        // Inactive Tab foreground color in an active group.
        "tab.inactiveForeground": "inactiveForeground",
        // Active tab foreground color in an inactive editor group.
        // "tab.unfocusedActiveForeground": "INHERIT",
        // Inactive tab foreground color in an inactive editor group.
        // "tab.unfocusedInactiveForeground": "INHERIT",
        // Tab background color when hovering
        "tab.hoverBackground": "background",
        // Tab background color in an unfocused group when hovering
        // "tab.unfocusedHoverBackground": "TODO",
        // Border to highlight tabs when hovering
        "tab.hoverBorder": "background",
        // Border to highlight tabs in an unfocused group when hovering
        // "tab.unfocusedHoverBorder": "TODO",

        //
        // Editor Colors
        //
        // Editor background color.
        "editor.background": "background",
        // Editor default foreground color.
        "editor.foreground": "foreground",
        // Color of editor line numbers.
        "editorLineNumber.foreground": "inactiveForeground",
        // Color of the active editor line number.
        "editorLineNumber.activeForeground": "foreground",
        // The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.
        // "editorCursor.background": "INHERIT",
        // Color of the editor cursor.
        // "editorCursor.foreground": "INHERIT",

        // Color of the editor selection.
        "editor.selectionBackground": "selectionBackground",
        // Color of the selected text for high contrast.
        "editor.selectionForeground": "foreground",
        // Color of the selection in an inactive editor. The color must not be opaque to not hide underlying decorations.
        "editor.inactiveSelectionBackground": "inactiveSelectionBackground",
        // Color for regions with the same content as the selection. The color must not be opaque to not hide underlying decorations.
        "editor.selectionHighlightBackground": "transparent",
        // Border color for regions with the same content as the selection.
        "editor.selectionHighlightBorder": "yellow",

        // Background color of a symbol during read-access, for example when reading a variable. The color must not be opaque to not hide underlying decorations.
        // "editor.wordHighlightBackground": "INHERIT",
        // Border color of a symbol during read-access, for example when reading a variable.
        // "editor.wordHighlightBorder": "INHERIT",
        // Background color of a symbol during write-access, for example when writing to a variable. The color must not be opaque to not hide underlying decorations.
        // "editor.wordHighlightStrongBackground": "INHERIT",
        // Border color of a symbol during write-access, for example when writing to a variable.
        // "editor.wordHighlightStrongBorder": "INHERIT",

        //
        // Color of the current search match.
        "editor.findMatchBackground": "selectionBackground",
        // Color of the other search matches. The color must not be opaque to not hide underlying decorations.
        "editor.findMatchHighlightBackground": "inactiveSelectionBackground",
        // Color the range limiting the search (Enable 'Find in Selection' in the find widget). The color must not be opaque to not hide underlying decorations.
        "editor.findRangeHighlightBackground": "inactiveBackground",
        // Border color of the current search match.
        "editor.findMatchBorder": "transparent",
        // Border color of the other search matches.
        "editor.findMatchHighlightBorder": "transparent",
        // Border color the range limiting the search (Enable 'Find in Selection' in the find widget).
        // Setting this to transparent will cause overlapping of borders: https://github.com/microsoft/vscode-docs/issues/2264#issuecomment-445363064
        // "editor.findRangeHighlightBorder": "NONE",

        // Highlight below the word for which a hover is shown. The color must not be opaque to not hide underlying decorations.
        "editor.hoverHighlightBackground": "transparent",

        // Background color for the highlight of line at the cursor position.
        "editor.lineHighlightBackground": "highlightBackground",
        // Background color for the border around the line at the cursor position.
        "editor.lineHighlightBorder": "transparent",

        // Color of active links.
        "editorLink.activeForeground": "cyan",

        // Background color of highlighted ranges, used by Quick Open, Symbol in File and Find features. The color must not be opaque to not hide underlying decorations.
        "editor.rangeHighlightBackground": "selectionBackground",
        // Background color of the border around highlighted ranges.
        // "editor.rangeHighlightBorder": "NONE",

        // Color of whitespace characters in the editor.
        // "editorWhitespace.foreground": "INHERIT",

        // Color of the editor indentation guides.
        // "editorIndentGuide.background": "INHERIT",

        // Color of the editor rulers.
        "editorRuler.foreground": "lightBackground80",

        // Foreground color of an editor CodeLens.
        // "editorCodeLens.foreground": "INHERIT",

        // Background color behind matching brackets.
        "editorBracketMatch.background": "transparent",
        // Color for matching brackets boxes.
        "editorBracketMatch.border": "foreground",

        // Color of the overview ruler border.
        "editorOverviewRuler.border": "border",
        // Overview ruler marker color for find matches. The color must not be opaque to not hide underlying decorations.
        "editorOverviewRuler.findMatchForeground": "yellow80",
        // Overview ruler marker color for highlighted ranges, like by the Quick Open, Symbol in File and Find features. The color must not be opaque to not hide underlying decorations.
        // "editorOverviewRuler.rangeHighlightForeground": "INHERIT",
        // Overview ruler marker color for selection highlights. The color must not be opaque to not hide underlying decorations.
        "editorOverviewRuler.selectionHighlightForeground": "yellow80",
        // Overview ruler marker color for symbol highlights. The color must not be opaque to not hide underlying decorations.
        "editorOverviewRuler.wordHighlightForeground": "yellow80",
        // Overview ruler marker color for write-access symbol highlights. The color must not be opaque to not hide underlying decorations.
        "editorOverviewRuler.wordHighlightStrongForeground": "yellow80",
        // Overview ruler marker color for modified content.
        "editorOverviewRuler.modifiedForeground": "orange80",
        // Overview ruler marker color for added content.
        "editorOverviewRuler.addedForeground": "green80",
        // Overview ruler marker color for deleted content.
        "editorOverviewRuler.deletedForeground": "pink80",
        // Overview ruler marker color for errors.
        "editorOverviewRuler.errorForeground": "pink80",
        // Overview ruler marker color for warnings.
        "editorOverviewRuler.warningForeground": "orange80",
        // Overview ruler marker color for infos.
        "editorOverviewRuler.infoForeground": "cyan80",

        // Foreground color of error squiggles in the editor.
        "editorError.foreground": "pink",
        // Border color of error squiggles in the editor.
        "editorError.border": "transparent",
        // Foreground color of warning squiggles in the editor.
        "editorWarning.foreground": "orange",
        // Border color of warning squiggles in the editor.
        "editorWarning.border": "transparent",
        // Foreground color of info squiggles in the editor.
        "editorInfo.foreground": "foreground",
        // Border color of info squiggles in the editor.
        "editorInfo.border": "transparent",
        // Foreground color of hints in the editor.
        "editorHint.foreground": "cyan",
        // Border color of hints in the editor.
        "editorHint.border": "transparent",

        // Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.
        "editorGutter.background": "background",
        // Editor gutter background color for lines that are modified.
        "editorGutter.modifiedBackground": "orange80",
        // Editor gutter background color for lines that are added.
        "editorGutter.addedBackground": "green80",
        // Editor gutter background color for lines that are deleted.
        "editorGutter.deletedBackground": "pink80",

        //
        // Diff Editor Colors
        //
        // Background color for text that got inserted. The color must not be opaque to not hide underlying decorations.
        "diffEditor.insertedTextBackground": "green30",
        // Outline color for the text that got inserted.
        "diffEditor.insertedTextBorder": "transparent",
        // Background color for text that got removed. The color must not be opaque to not hide underlying decorations.
        "diffEditor.removedTextBackground": "pink30",
        // Outline color for text that got removed.
        "diffEditor.removedTextBorder": "transparent",

        //
        // Editor Widget Colors
        //
        // Background color of editor widgets, such as Find/Replace.
        "editorWidget.background": "background",
        // Border color of the editor widget unless the widget does not contain a border or defines its own border color.
        "editorWidget.border": "border",
        // Background color of the suggestion widget.
        // "editorSuggestWidget.background": "INHERIT",
        // Border color of the suggestion widget.
        // "editorSuggestWidget.border": "INHERIT",
        // Foreground color of the suggestion widget.
        "editorSuggestWidget.foreground": "foreground",
        // Color of the match highlights in the suggestion widget.
        "editorSuggestWidget.highlightForeground": "cyan",
        // Background color of the selected entry in the suggestion widget.
        "editorSuggestWidget.selectedBackground": "selectionBackground",
        // Background color of the editor hover.
        // "editorHoverWidget.background": "INHERIT",
        // Border color of the editor hover.
        // "editorHoverWidget.border": "INHERIT",

        // Editor marker navigation widget background.
        "editorMarkerNavigation.background": "background",
        // Editor marker navigation widget error color.
        "editorMarkerNavigationError.background": "pink80",
        // Editor marker navigation widget warning color.
        "editorMarkerNavigationWarning.background": "orange80",
        // Editor marker navigation widget info color.
        "editorMarkerNavigationInfo.background": "cyan80",

        //
        // Peek View Colors
        //
        // Color of the peek view borders and arrow.
        "peekView.border": "border",
        // Background color of the peek view editor.
        "peekViewEditor.background": "background",
        // Background color of the gutter in the peek view editor.
        "peekViewEditorGutter.background": "background",
        // Match highlight color in the peek view editor.
        "peekViewEditor.matchHighlightBackground": "highlightBackground",
        // Background color of the peek view result list.
        "peekViewResult.background": "background",
        // Foreground color for file nodes in the peek view result list.
        // "peekViewResult.fileForeground": "INHERIT",
        // Foreground color for line nodes in the peek view result list.
        "peekViewResult.lineForeground": "foreground",
        // Match highlight color in the peek view result list.
        "peekViewResult.matchHighlightBackground": "highlightBackground",
        // Background color of the selected entry in the peek view result list.
        "peekViewResult.selectionBackground": "selectionBackground",
        // Foreground color of the selected entry in the peek view result list.
        "peekViewResult.selectionForeground": "brightForeground",
        // Background color of the peek view title area.
        "peekViewTitle.background": "background",
        // Color of the peek view title info.
        "peekViewTitleDescription.foreground": "inactiveForeground",
        // Color of the peek view title.
        "peekViewTitleLabel.foreground": "foreground",

        //
        // Merge Conflicts
        //
        // Current header background in inline merge conflicts. The color must not be opaque to not hide underlying decorations.
        "merge.currentHeaderBackground": "green80",
        // Current content background in inline merge conflicts. The color must not be opaque to not hide underlying decorations.
        "merge.currentContentBackground": "green40",
        // Incoming header background in inline merge conflicts. The color must not be opaque to not hide underlying decorations.
        "merge.incomingHeaderBackground": "cyan80",
        // Incoming content background in inline merge conflicts. The color must not be opaque to not hide underlying decorations.
        "merge.incomingContentBackground": "cyan40",
        // Border color on headers and the splitter in inline merge conflicts.
        // "merge.border": "NONE",
        // Common ancestor content background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.
        // "merge.commonContentBackground": "INHERIT",
        // Common ancestor header background in inline merge-conflicts. The color must not be opaque to not hide underlying decorations.
        // "merge.commonHeaderBackground": "INHERIT",
        // Current overview ruler foreground for inline merge conflicts.
        // "editorOverviewRuler.currentContentForeground": "INHERIT",
        // Incoming overview ruler foreground for inline merge conflicts.
        // "editorOverviewRuler.incomingContentForeground": "INHERIT",
        // Common ancestor overview ruler foreground for inline merge conflicts.
        // "editorOverviewRuler.commonContentForeground": "INHERIT",

        //
        // Panel Colors
        //
        // Panel background color.
        "panel.background": "background",
        // Panel border color to separate the panel from the editor.
        "panel.border": "highlightBackground",
        // Drag and drop feedback color for the panel title items. The color should have transparency so that the panel entries can still shine through.
        "panel.dropBorder": "lightBackground",
        // Border color for the active panel title.
        "panelTitle.activeBorder": "foreground",
        // Title color for the active panel.
        "panelTitle.activeForeground": "foreground",
        // Title color for the inactive panel.
        "panelTitle.inactiveForeground": "inactiveForeground",

        //
        // Status Bar Colors
        //
        // Standard Status Bar background color.
        "statusBar.background": "lightBackground",
        // Status Bar foreground color.
        "statusBar.foreground": "foreground",
        // Status Bar border color separating the Status Bar and editor.
        "statusBar.border": "lightBackground",
        // Status Bar background color when a program is being debugged.
        "statusBar.debuggingBackground": "orange",
        // Status Bar foreground color when a program is being debugged.
        "statusBar.debuggingForeground": "realwhite",
        // Status Bar border color separating the Status Bar and editor when a program is being debugged.
        // "statusBar.debuggingBorder": "NONE",
        // Status Bar foreground color when no folder is opened.
        "statusBar.noFolderForeground": "background",
        // Status Bar background color when no folder is opened.
        "statusBar.noFolderBackground": "purple",
        // Status Bar border color separating the Status Bar and editor when no folder is opened.
        // "statusBar.noFolderBorder": "NONE",
        // Status Bar item background color when clicking.
        "statusBarItem.activeBackground": "activeBackground",
        // Status Bar item background color when hovering.
        "statusBarItem.hoverBackground": "highlightBackground",
        //
        "statusBarItem.prominentForeground": "realwhite",
        // Status Bar prominent items background color. Prominent items stand out from other Status Bar entries to indicate importance. Change mode Toggle Tab Key Moves Focus from command palette to see an example.
        "statusBarItem.prominentBackground": "highlightBackground",
        // Status Bar prominent items background color when hovering. Prominent items stand out from other Status Bar entries to indicate importance. Change mode Toggle Tab Key Moves Focus from command palette to see an example.
        "statusBarItem.prominentHoverBackground": "activeBackground",

        //
        // Title Bar Colors
        //
        // Title Bar background when the window is active.
        "titleBar.activeBackground": "white40",
        // Title Bar foreground when the window is active.
        "titleBar.activeForeground": "foreground",
        // Title Bar background when the window is inactive.
        "titleBar.inactiveBackground": "darkBackground",
        // Title Bar foreground when the window is inactive.
        "titleBar.inactiveForeground": "inactiveForeground",
        // Title bar border color.
        "titleBar.border": "lightBackground",

        //
        // Menu items in title bar
        //
        "menu.background": "lightBackground",
        "menu.foreground": "foreground",
        "menu.selectionBackground": "selectionBackground",
        "menu.selectionForeground": "foreground",
        "menu.separatorBackground": "inactiveForeground",
        "menubar.selectionBackground": "highlightBackground",
        "menubar.selectionForeground": "foreground",

        //
        // Notification colors
        //
        // Notification Center border color.
        // "notificationCenter.border": "NONE",
        // Notification Center header foreground "color."
        "notificationCenterHeader.foreground": "foreground",
        // Notification Center header background "color."
        "notificationCenterHeader.background": "highlightBackground",
        // Notification toast border color.
        // "notificationToast.border": "NONE",
        // Notification foreground color.
        "notifications.foreground": "foreground",
        // Notification background color.
        "notifications.background": "lightBackground",
        // Notification border color separating from other notifications in the Notification Center.
        // "notifications.border": "NONE",
        // Notification links foreground color.
        "notificationLink.foreground": "cyan",
        // The color used for the notification error icon.
        "notificationsErrorIcon.foreground": "pink",
        // The color used for the notification warning icon.
        "notificationsWarningIcon.foreground": "orange",
        // The color used for the notification info "icon."
        "notificationsInfoIcon.foreground": "cyan",

        //
        // Extensions
        //
        // Extension view button foreground color (for example Install button).
        // "extensionButton.prominentForeground": "TODO",
        // Extension view button background color.
        // "extensionButton.prominentBackground": "TODO",
        // Extension view button background hover color.
        // "extensionButton.prominentHoverBackground": "TODO",

        //
        // Quick Picker
        //
        // Quick picker (Quick Open) color for grouping borders.
        // "pickerGroup.border": "TODO",
        // Quick picker (Quick Open) color for grouping labels.
        // "pickerGroup.foreground": "TODO",

        //
        // Integrated Terminal Colors
        //
        // The background of the Integrated Terminal's viewport.
        "terminal.background": "background",
        // The default foreground color of the Integrated Terminal.
        "terminal.foreground": "foreground",
        // 'Black' ANSI color in the terminal.
        "terminal.ansiBlack": "inactiveForeground",
        // 'Blue' ANSI color in the terminal.
        "terminal.ansiBlue": "cyan",
        // 'BrightBlack' ANSI color in the terminal.
        "terminal.ansiBrightBlack": "inactiveForeground",
        // 'BrightBlue' ANSI color in the terminal.
        "terminal.ansiBrightBlue": "cyan",
        // 'BrightCyan' ANSI color in the terminal.
        "terminal.ansiBrightCyan": "cyan",
        // 'BrightGreen' ANSI color in the terminal.
        "terminal.ansiBrightGreen": "green",
        // 'BrightMagenta' ANSI color in the terminal.
        "terminal.ansiBrightMagenta": "purple",
        // 'BrightRed' ANSI color in the terminal.
        "terminal.ansiBrightRed": "pink",
        // 'BrightWhite' ANSI color in the terminal.
        "terminal.ansiBrightWhite": "brightForeground",
        // 'BrightYellow' ANSI color in the terminal.
        "terminal.ansiBrightYellow": "yellow",
        // 'Cyan' ANSI color in the terminal.
        "terminal.ansiCyan": "cyan",
        // 'Green' ANSI color in the terminal.
        "terminal.ansiGreen": "green",
        // 'Magenta' ANSI color in the terminal.
        "terminal.ansiMagenta": "purple",
        // 'Red' ANSI color in the terminal.
        "terminal.ansiRed": "pink",
        // 'White' ANSI color in the terminal.
        "terminal.ansiWhite": "brightForeground",
        // 'Yellow' ANSI color in the terminal.
        "terminal.ansiYellow": "yellow",
        // The selection background color of the terminal.
        "terminal.selectionBackground": "selectionBackground",
        // The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.
        "terminalCursor.background": "darkBackground",
        // The foreground color of the terminal cursor.
        "terminalCursor.foreground": "foreground",

        //
        // Welcome Page
        //
        // Background color for the buttons on the Welcome page.
        // "welcomePage.buttonBackground": "INHERIT",
        // Hover background color for the buttons on the Welcome page.
        // "welcomePage.buttonHoverBackground": "INHERIT",
        // Background color for the embedded editors on the Interactive Playground.
        // "walkThrough.embeddedEditorBackground": "INHERIT",

        //
        // Git Colors
        //
        // Color for added Git resources. Used for file labels and the SCM viewlet.
        "gitDecoration.addedResourceForeground": "green",
        // Color for modified git resources. Used file labels and the SCM viewlet.
        "gitDecoration.modifiedResourceForeground": "yellow",
        // Color for deleted git resources. Used file labels and the SCM viewlet.
        "gitDecoration.deletedResourceForeground": "pink",
        // Color for untracked git resources. Used file labels and the SCM viewlet.
        "gitDecoration.untrackedResourceForeground": "cyan",
        // Color for ignored git resources. Used file labels and the SCM viewlet.
        "gitDecoration.ignoredResourceForeground": "inactiveForeground",
        // Color for conflicting git resources. Used file labels and the SCM viewlet.
        "gitDecoration.conflictingResourceForeground": "purple",
        // Color for submodule resources.
        "gitDecoration.submoduleResourceForeground": "foreground",

        // Debug colors
        // Debug toolbar background color.
        "debugToolBar.background": "background",
        // Debug toolbar border color.
        // "debugToolBar.border": "INHERITED",
        // Background color of the top stack frame highlight in the editor.
        "editor.stackFrameHighlightBackground": "selectionBackground",
        // Background color of the focused stack frame highlight in the editor.
        // "editor.focusedStackFrameHighlightBackground": "INHERITED",
        // Foreground color for a label shown in the CALL STACK view when the debugger breaks on an exception
        // "debugView.exceptionLabelForeground": "INHERITED",
        // Background color for a label shown in the CALL STACK view when the debugger breaks on an exception
        // "debugView.exceptionLabelBackground": "INHERITED",
        // Foreground color for a label in the CALL STACK view showing the current session's or thread's state
        // "debugView.stateLabelForeground": "INHERITED",
        // Background color for a label in the CALL STACK view showing the current session's or thread's state
        // "debugView.stateLabelBackground": "INHERITED",
        // Color used to highlight value changes in the debug views (ie. in the Variables view)
        // "debugView.valueChangedHighlight": "INHERITED",
        // Foreground color for the token names shown in debug views (ie. the Variables or Watch view)
        // "debugTokenExpression.name": "INHERITED",
        // Foreground color for the token values shown in debug views
        // "debugTokenExpression.value": "INHERITED",
        // Foreground color for strings in debug views
        // "debugTokenExpression.string": "INHERITED",
        // Foreground color for booleans in debug views
        // "debugTokenExpression.boolean": "INHERITED",
        // Foreground color for numbers in debug views
        // "debugTokenExpression.number": "INHERITED",
        // Foreground color for expression errors in debug views
        // "debugTokenExpression.error": "INHERITED",

        //
        // Debug Icons Colors
        //

        // Icon color for breakpoints.
        "debugIcon.breakpointForeground": "pink",
        // Icon color for disabled breakpoints.
        "debugIcon.breakpointDisabledForeground": "pink40",
        // Icon color for unverified breakpoints.
        "debugIcon.breakpointUnverifiedForeground": "purple",
        // Icon color for the current breakpoint stack frame.
        "debugIcon.breakpointCurrentStackframeForeground": "pink",
        // Icon color for all breakpoint stack frames.
        "debugIcon.breakpointStackframeForeground": "orange",
        // Debug toolbar icon for start debugging.
        "debugIcon.startForeground": "green",
        // Debug toolbar icon for pause.
        "debugIcon.pauseForeground": "cyan",
        // Debug toolbar icon for stop.
        "debugIcon.stopForeground": "pink",
        // Debug toolbar icon for disconnect.
        "debugIcon.disconnectForeground": "pink",
        // Debug toolbar icon for restart.
        "debugIcon.restartForeground": "green",
        // Debug toolbar icon for step over.
        "debugIcon.stepOverForeground": "cyan",
        // Debug toolbar icon for step into.
        "debugIcon.stepIntoForeground": "cyan",
        // Debug toolbar icon for step over.
        "debugIcon.stepOutForeground": "cyan",
        // Debug toolbar icon for continue.
        "debugIcon.continueForeground": "cyan",
        // Debug toolbar icon for step back.
        "debugIcon.stepBackForeground": "cyan",
        // Foreground color for info messages in debug REPL console.
        "debugConsole.infoForeground": "foreground",
        // Foreground color for warning messages in debug REPL console.
        "debugConsole.warningForeground": "orange",
        // Foreground color for error messages in debug REPL console.
        "debugConsole.errorForeground": "pink",
        // Foreground color for source filenames in debug REPL console.
        "debugConsole.sourceForeground": "foreground",
        // Foreground color for debug console input marker icon.
        "debugConsoleInputIcon.foreground": "foreground",

        //
        // VS Code Extensions Customisations
        //

        //
        // GitLens
        //

        // Specifies the background color of the gutter blame annotations
        "gitlens.gutterBackgroundColor": "background",
        // Specifies the foreground color of the gutter blame annotations
        "gitlens.gutterForegroundColor": "foreground",
        // Specifies the foreground color of an uncommitted line in the gutter blame annotations
        "gitlens.gutterUncommittedForegroundColor": "green",
        // Specifies the background color of the trailing blame annotation
        // "gitlens.trailingLineBackgroundColor": "TODO",
        // Specifies the foreground color of the trailing blame annotation
        // "gitlens.trailingLineForegroundColor": "TODO",
        // Specifies the background color of the associated line highlights in blame annotations
        "gitlens.lineHighlightBackgroundColor": "purple30",
        // Specifies the overview ruler color of the associated line highlights in blame annotations
        "gitlens.lineHighlightOverviewRulerColor": "purple80"
    },
    "tokenColors": [
        {
            "settings": {
                "foreground": "foreground"
            }
        },
        {
            "scope": "constant.numeric.line-number.find-in-files - match",
            "settings": {
                "foreground": "purpleA0"
            }
        },
        {
            "scope": "entity.name.filename.find-in-files",
            "settings": {
                "foreground": "yellow"
            }
        },
        {
            "name": "Comment",
            "scope": "comment",
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "String",
            "scope": "string",
            "settings": {
                "foreground": "yellow"
            }
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Built-in constant",
            "scope": "constant.language",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "User-defined constant",
            "scope": ["constant.character", "constant.other"],
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Variable",
            "scope": "variable",
            "settings": {
                "foreground": "foreground"
            }
        },
        {
            "name": "Keyword",
            "scope": "keyword",
            "settings": {
                "foreground": "pink"
            }
        },
        {
            "name": "Storage",
            "scope": "storage",
            "settings": {
                "foreground": "pink"
            }
        },
        {
            "name": "Storage type",
            "scope": "storage.type",
            "settings": {
                "fontStyle": "italic",
                "foreground": "cyan"
            }
        },
        {
            "name": "Class name",
            "scope": "entity.name.class",
            "settings": {
                "fontStyle": "underline",
                "foreground": "green"
            }
        },
        {
            "name": "Inherited class",
            "scope": "entity.other.inherited-class",
            "settings": {
                "fontStyle": "italic underline",
                "foreground": "green"
            }
        },
        {
            "name": "Function name",
            "scope": "entity.name.function",
            "settings": {
                "foreground": "green"
            }
        },
        {
            "name": "Function argument",
            "scope": "variable.parameter",
            "settings": {
                "fontStyle": "italic",
                "foreground": "orange"
            }
        },
        {
            "name": "Tag name",
            "scope": "entity.name.tag",
            "settings": {
                "foreground": "pink"
            }
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "settings": {
                "foreground": "green"
            }
        },
        {
            "name": "Library function",
            "scope": "support.function",
            "settings": {
                "foreground": "cyan"
            }
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "settings": {
                "foreground": "cyan"
            }
        },
        {
            "name": "Library class/type",
            "scope": ["support.type", "support.class"],
            "settings": {
                "fontStyle": "italic",
                "foreground": "cyan"
            }
        },
        {
            "name": "Library variable",
            "scope": "support.other.variable",
            "settings": {
                "foreground": ""
            }
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "settings": {
                "foreground": "foreground"
            }
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "settings": {
                "foreground": "foreground"
            }
        },
        {
            "name": "JSON String",
            "scope": "meta.structure.dictionary.json string.quoted.double.json",
            "settings": {
                "foreground": "yellow"
            }
        },
        {
            "name": "diff.header",
            "scope": ["meta.diff", "meta.diff.header"],
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "diff.deleted",
            "scope": "markup.deleted",
            "settings": {
                "foreground": "pink"
            }
        },
        {
            "name": "diff.inserted",
            "scope": "markup.inserted",
            "settings": {
                "foreground": "green"
            }
        },
        {
            "name": "diff.changed",
            "scope": "markup.changed",
            "settings": {
                "foreground": "yellow"
            }
        },
        {
            "name": "Markup: raw inline",
            "scope": "text.html.markdown markup.raw.inline",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Markup: italic",
            "scope": "markup.italic",
            "settings": {
                "fontStyle": "italic",
                "foreground": "yellow"
            }
        },
        {
            "name": "Markup: bold",
            "scope": "markup.bold",
            "settings": {
                "fontStyle": "bold",
                "foreground": "orange"
            }
        },
        {
            "name": "Markup: underline",
            "scope": "markup.underline",
            "settings": {
                "fontStyle": "underline",
                "foreground": "cyan"
            }
        },
        {
            "name": "Markup: Quote",
            "scope": "markup.quote",
            "settings": {
                "fontStyle": "italic",
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "Markup: Raw block",
            "scope": "markup.raw.block",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Markup: table",
            "scope": "markup.table",
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "Markdown: plain",
            "scope": "text.html.markdown",
            "settings": {
                "foreground": "foreground"
            }
        },
        {
            "name": "Markdown: linebreak",
            "scope": "text.html.markdown meta.dummy.line-break",
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "Markdown: heading",
            "scope": [
                "markdown.heading",
                "markup.heading | markup.heading entity.name",
                "markup.heading.markdown punctuation.definition.heading.markdown"
            ],
            "settings": {
                "fontStyle": "bold",
                "foreground": "pink"
            }
        },
        {
            "name": "Markdown: Blockquote",
            "scope": [
                "markup.quote",
                "punctuation.definition.blockquote.markdown"
            ],
            "settings": {
                "fontStyle": "italic",
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "Markdown: Link",
            "scope": "string.other.link.title.markdown",
            "settings": {
                "fontStyle": "underline",
                "foreground": "cyan"
            }
        },
        {
            "name": "Markdown: List Items Punctuation",
            "scope": "punctuation.definition.list_item.markdown",
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "Markdown: Raw Block fenced",
            "scope": "markup.raw.block.fenced.markdown",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Markdown: Fenced Bode Block",
            "scope": [
                "punctuation.definition.fenced.markdown",
                "variable.language.fenced.markdown"
            ],
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Markdown: Fenced Language",
            "scope": "variable.language.fenced.markdown",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Markdown: Separator",
            "scope": "meta.separator",
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "scope": "token.info-token",
            "settings": {
                "foreground": "cyan"
            }
        },
        {
            "scope": "token.warn-token",
            "settings": {
                "foreground": "orange"
            }
        },
        {
            "scope": "token.error-token",
            "settings": {
                "foreground": "pink"
            }
        },
        {
            "scope": "token.debug-token",
            "settings": {
                "foreground": "purple"
            }
        },
        {
            "name": "Python docstrings",
            "scope": ["string.quoted.docstring.multi"],
            "settings": {
                "foreground": "inactiveForeground"
            }
        },
        {
            "name": "Inherited classes",
            "scope": ["entity.other.inherited-class"],
            "settings": {
                "fontStyle": ""
            }
        },
        {
            "name": "Language specific variables",
            "scope": ["variable.language"],
            "settings": {
                "fontStyle": "italic"
            }
        },
        {
            "name": "UPPERCASE constants",
            "scope": ["constant.other.caps"],
            "settings": {
                "foreground": "foreground",
                "fontStyle": ""
            }
        },
        {
            "name": "JSON Keys",
            "scope": ["support.type.property-name.json"],
            "settings": {
                "fontStyle": ""
            }
        }
    ]
}
